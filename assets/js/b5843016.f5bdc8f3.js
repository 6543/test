"use strict";(self.webpackChunkwoodpecker=self.webpackChunkwoodpecker||[]).push([[3106],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return u}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),m=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=m(e.components);return r.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=m(n),u=i,k=d["".concat(p,".").concat(u)]||d[u]||s[u]||a;return n?r.createElement(k,o(o({ref:t},c),{},{components:n})):r.createElement(k,o({ref:t},c))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var m=2;m<a;m++)o[m]=n[m];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6530:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return m},toc:function(){return c},default:function(){return d}});var r=n(3117),i=n(102),a=(n(7294),n(3905)),o=["components"],l={},p="Migrations",m={unversionedId:"migrations",id:"migrations",isDocsHomePage:!1,title:"Migrations",description:"Some versions need some changes to the server configuration or the pipeline configuration files.",source:"@site/docs/91-migrations.md",sourceDirName:".",slug:"/migrations",permalink:"/docs/migrations",editUrl:"https://github.com/woodpecker-ci/woodpecker/edit/master/docs/docs/91-migrations.md",tags:[],version:"current",sidebarPosition:91,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Downloads",permalink:"/docs/downloads"}},c=[{value:"0.15.0",id:"0150",children:[],level:2},{value:"0.14.0",id:"0140",children:[],level:2}],s={toc:c};function d(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"migrations"},"Migrations"),(0,a.kt)("p",null,"Some versions need some changes to the server configuration or the pipeline configuration files."),(0,a.kt)("h2",{id:"0150"},"0.15.0"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Default value for custom pipeline path is now empty / un-set which results in following resolution:"),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},".woodpecker/*.yml")," -> ",(0,a.kt)("inlineCode",{parentName:"p"},".woodpecker.yml")," -> ",(0,a.kt)("inlineCode",{parentName:"p"},".drone.yml")),(0,a.kt)("p",{parentName:"li"},"Only projects created after updating will have an empty value by default. Existing projects will stick to the current pipeline path which is ",(0,a.kt)("inlineCode",{parentName:"p"},".drone.yml")," in most cases."),(0,a.kt)("p",{parentName:"li"},"Read more about it at the ",(0,a.kt)("a",{parentName:"p",href:"/docs/usage/project-settings#pipeline-path"},"Project Settings"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Dropped support for ",(0,a.kt)("inlineCode",{parentName:"p"},"DRONE_*")," environment variables. The according ",(0,a.kt)("inlineCode",{parentName:"p"},"WOODPECKER_*")," variables must be used instead.\nAdditionally some alternative namings have been removed to simplify maintenance:"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"WOODPECKER_AGENT_SECRET")," replaces ",(0,a.kt)("inlineCode",{parentName:"li"},"WOODPECKER_SECRET"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"DRONE_SECRET"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"WOODPECKER_PASSWORD"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"DRONE_PASSWORD")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"DRONE_AGENT_SECRET"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"WOODPECKER_HOST")," replaces ",(0,a.kt)("inlineCode",{parentName:"li"},"DRONE_HOST")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"DRONE_SERVER_HOST"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"WOODPECKER_DATABASE_DRIVER")," replaces ",(0,a.kt)("inlineCode",{parentName:"li"},"DRONE_DATABASE_DRIVER")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"DATABASE_DRIVER"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"WOODPECKER_DATABASE_DATASOURCE")," replaces ",(0,a.kt)("inlineCode",{parentName:"li"},"DRONE_DATABASE_DATASOURCE")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"DATABASE_CONFIG"),"."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"From version ",(0,a.kt)("inlineCode",{parentName:"p"},"0.15.0")," ongoing there will be three types of docker images: ",(0,a.kt)("inlineCode",{parentName:"p"},"latest"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"next")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"x.x.x")," with an alpine variant for each type like ",(0,a.kt)("inlineCode",{parentName:"p"},"latest-alpine"),".\nIf you used ",(0,a.kt)("inlineCode",{parentName:"p"},"latest")," before to try pre-release features you should switch to ",(0,a.kt)("inlineCode",{parentName:"p"},"next")," after this release.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Prometheus metrics have been changed from ",(0,a.kt)("inlineCode",{parentName:"p"},"drone_*")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"woodpecker_*"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Base path has moved from ",(0,a.kt)("inlineCode",{parentName:"p"},"/var/lib/drone")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"/var/lib/woodpecker"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Default SQLite database location has changed:"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"/var/lib/drone/drone.sqlite")," -> ",(0,a.kt)("inlineCode",{parentName:"li"},"/var/lib/woodpecker/woodpecker.sqlite")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"drone.sqlite")," -> ",(0,a.kt)("inlineCode",{parentName:"li"},"woodpecker.sqlite")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"..."))),(0,a.kt)("h2",{id:"0140"},"0.14.0"),(0,a.kt)("p",null,"No breaking changes"))}d.isMDXComponent=!0}}]);