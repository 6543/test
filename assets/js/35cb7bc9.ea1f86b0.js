"use strict";(self.webpackChunkwoodpecker=self.webpackChunkwoodpecker||[]).push([[7461],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return k}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),c=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return o.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},s=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=c(n),k=r,m=s["".concat(p,".").concat(k)]||s[k]||d[k]||a;return n?o.createElement(m,i(i({ref:t},u),{},{components:n})):o.createElement(m,i({ref:t},u))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=s;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}s.displayName="MDXCreateElement"},4551:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return k},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return d}});var o=n(3117),r=n(102),a=(n(7294),n(3905)),i=["components"],l={},p="Agent configuration",c={unversionedId:"administration/agent-config",id:"version-0.15/administration/agent-config",title:"Agent configuration",description:"Agents are configured by the command line or environement variables. At the minimum you need the following information:",source:"@site/versioned_docs/version-0.15/30-administration/15-agent-config.md",sourceDirName:"30-administration",slug:"/administration/agent-config",permalink:"/docs/administration/agent-config",draft:!1,editUrl:"https://github.com/woodpecker-ci/woodpecker/edit/master/docs/versioned_docs/version-0.15/30-administration/15-agent-config.md",tags:[],version:"0.15",sidebarPosition:15,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Coding",permalink:"/docs/administration/vcs/coding"},next:{title:"Databases",permalink:"/docs/administration/database"}},u={},d=[{value:"Processes per agent",id:"processes-per-agent",level:2},{value:"Filtering agents",id:"filtering-agents",level:2},{value:"Filter on Platform",id:"filter-on-platform",level:3},{value:"All agent configuration options",id:"all-agent-configuration-options",level:2},{value:"<code>WOODPECKER_SERVER</code>",id:"woodpecker_server",level:3},{value:"<code>WOODPECKER_USERNAME</code>",id:"woodpecker_username",level:3},{value:"<code>WOODPECKER_AGENT_SECRET</code>",id:"woodpecker_agent_secret",level:3},{value:"<code>WOODPECKER_LOG_LEVEL</code>",id:"woodpecker_log_level",level:3},{value:"<code>WOODPECKER_DEBUG_PRETTY</code>",id:"woodpecker_debug_pretty",level:3},{value:"<code>WOODPECKER_DEBUG_NOCOLOR</code>",id:"woodpecker_debug_nocolor",level:3},{value:"<code>WOODPECKER_HOSTNAME</code>",id:"woodpecker_hostname",level:3},{value:"<code>WOODPECKER_MAX_PROCS</code>",id:"woodpecker_max_procs",level:3},{value:"<code>WOODPECKER_HEALTHCHECK</code>",id:"woodpecker_healthcheck",level:3},{value:"<code>WOODPECKER_KEEPALIVE_TIME</code>",id:"woodpecker_keepalive_time",level:3},{value:"<code>WOODPECKER_KEEPALIVE_TIMEOUT</code>",id:"woodpecker_keepalive_timeout",level:3},{value:"<code>WOODPECKER_GRPC_SECURE</code>",id:"woodpecker_grpc_secure",level:3},{value:"<code>WOODPECKER_GRPC_VERIFY</code>",id:"woodpecker_grpc_verify",level:3},{value:"<code>WOODPECKER_BACKEND</code>",id:"woodpecker_backend",level:3}],s={toc:d};function k(e){var t=e.components,n=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"agent-configuration"},"Agent configuration"),(0,a.kt)("p",null,"Agents are configured by the command line or environement variables. At the minimum you need the following information:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"# docker-compose.yml\nversion: '3'\n\nservices:\n  woodpecker-agent:\n  [...]\n  environment:\n+   - WOODPECKER_SERVER=localhost:9000\n+   - WOODPECKER_AGENT_SECRET=\"your-shared-secret-goes-here\"\n\n")),(0,a.kt)("p",null,"The following are automatically set and can be overridden:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"WOODPECKER_HOSTNAME if not set, becomes the OS' hostname"),(0,a.kt)("li",{parentName:"ul"},"WOODPECKER_MAX_PROCS if not set, defaults to 1")),(0,a.kt)("h2",{id:"processes-per-agent"},"Processes per agent"),(0,a.kt)("p",null,"By default the maximum processes that are run per agent is 1. If required you can add ",(0,a.kt)("inlineCode",{parentName:"p"},"WOODPECKER_MAX_PROCS")," to increase your parellel processing on a per-agent basis."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"# docker-compose.yml\nversion: '3'\n\nservices:\n  woodpecker-agent:\n  [...]\n  environment:\n    - WOODPECKER_SERVER=localhost:9000\n    - WOODPECKER_AGENT_SECRET=\"your-shared-secret-goes-here\"\n+    - WOODPECKER_MAX_PROCS=4\n")),(0,a.kt)("h2",{id:"filtering-agents"},"Filtering agents"),(0,a.kt)("p",null,"When building your pipelines as long as you have set the platform or filter, builds can be made to only run code on certain agents."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"- WOODPECKER_HOSTNAME=mycompany-ci-01.example.com\n- WOODPECKER_FILTER=\n")),(0,a.kt)("h3",{id:"filter-on-platform"},"Filter on Platform"),(0,a.kt)("p",null,"Only want certain pipelines or steps to run on certain agents with specific platforms? Such as arm vs amd64?"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"# .woodpecker.yml\npipeline:\n  build:\n   image: golang\n   commands:\n     - go build\n     - go test\n  when:\n    platform: linux/amd64\n\n\n  testing:\n   image: golang\n   commands:\n     - go build\n     - go test\n  when:\n    platform: linux/arm*\n\n\n")),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"/docs/usage/pipeline-syntax#step-when---conditional-execution"},"Conditionals Pipeline")," syntax for more"),(0,a.kt)("h2",{id:"all-agent-configuration-options"},"All agent configuration options"),(0,a.kt)("p",null,"Here is the full list of configuration options and their default variables."),(0,a.kt)("h3",{id:"woodpecker_server"},(0,a.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_SERVER")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Default: ",(0,a.kt)("inlineCode",{parentName:"p"},"localhost:9000"))),(0,a.kt)("p",null,"Configures gRPC address of the server."),(0,a.kt)("h3",{id:"woodpecker_username"},(0,a.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_USERNAME")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Default: ",(0,a.kt)("inlineCode",{parentName:"p"},"x-oauth-basic"))),(0,a.kt)("p",null,"The gRPC username."),(0,a.kt)("h3",{id:"woodpecker_agent_secret"},(0,a.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_AGENT_SECRET")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Default: empty")),(0,a.kt)("p",null,"A shared secret used by server and agents to authenticate communication. A secret can be generated by ",(0,a.kt)("inlineCode",{parentName:"p"},"openssl rand -hex 32"),"."),(0,a.kt)("h3",{id:"woodpecker_log_level"},(0,a.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_LOG_LEVEL")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Default: empty")),(0,a.kt)("p",null,"Configures the logging level. Possible values are ",(0,a.kt)("inlineCode",{parentName:"p"},"trace"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"debug"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"info"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"warn"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"error"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"fatal"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"panic"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"disabled")," and empty."),(0,a.kt)("h3",{id:"woodpecker_debug_pretty"},(0,a.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_DEBUG_PRETTY")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Default: ",(0,a.kt)("inlineCode",{parentName:"p"},"false"))),(0,a.kt)("p",null,"Enable pretty-printed debug output."),(0,a.kt)("h3",{id:"woodpecker_debug_nocolor"},(0,a.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_DEBUG_NOCOLOR")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Default: ",(0,a.kt)("inlineCode",{parentName:"p"},"true"))),(0,a.kt)("p",null,"Disable colored debug output."),(0,a.kt)("h3",{id:"woodpecker_hostname"},(0,a.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_HOSTNAME")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Default: empty")),(0,a.kt)("p",null,"Configures the agent hostname."),(0,a.kt)("h3",{id:"woodpecker_max_procs"},(0,a.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_MAX_PROCS")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Default: ",(0,a.kt)("inlineCode",{parentName:"p"},"1"))),(0,a.kt)("p",null,"Configures the number of parallel builds."),(0,a.kt)("h3",{id:"woodpecker_healthcheck"},(0,a.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_HEALTHCHECK")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Default: ",(0,a.kt)("inlineCode",{parentName:"p"},"true"))),(0,a.kt)("p",null,"Enable healthcheck endpoint."),(0,a.kt)("h3",{id:"woodpecker_keepalive_time"},(0,a.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_KEEPALIVE_TIME")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Default: empty")),(0,a.kt)("p",null,"After a duration of this time of no activity, the agent pings the server to check if the transport is still alive."),(0,a.kt)("h3",{id:"woodpecker_keepalive_timeout"},(0,a.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_KEEPALIVE_TIMEOUT")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Default: ",(0,a.kt)("inlineCode",{parentName:"p"},"20s"))),(0,a.kt)("p",null,"After pinging for a keepalive check, the agent waits for a duration of this time before closing the connection if no activity."),(0,a.kt)("h3",{id:"woodpecker_grpc_secure"},(0,a.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_GRPC_SECURE")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Default: ",(0,a.kt)("inlineCode",{parentName:"p"},"false"))),(0,a.kt)("p",null,"Configures if the connection to ",(0,a.kt)("inlineCode",{parentName:"p"},"WOODPECKER_SERVER")," should be made using a secure transport."),(0,a.kt)("h3",{id:"woodpecker_grpc_verify"},(0,a.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_GRPC_VERIFY")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Default: ",(0,a.kt)("inlineCode",{parentName:"p"},"true"))),(0,a.kt)("p",null,"Configures if the gRPC server certificate should be verified, only valid when ",(0,a.kt)("inlineCode",{parentName:"p"},"WOODPECKER_GRPC_SECURE")," is ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,a.kt)("h3",{id:"woodpecker_backend"},(0,a.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_BACKEND")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Default: ",(0,a.kt)("inlineCode",{parentName:"p"},"auto-detect"))),(0,a.kt)("p",null,"Configures the backend engine to run pipelines on. Possible values are ",(0,a.kt)("inlineCode",{parentName:"p"},"auto-detect")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"docker"),"."))}k.isMDXComponent=!0}}]);