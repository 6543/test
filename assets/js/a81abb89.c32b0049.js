"use strict";(self.webpackChunkwoodpecker=self.webpackChunkwoodpecker||[]).push([[9866],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3032:function(e,t,n){n.r(t),n.d(t,{assets:function(){return y},contentTitle:function(){return m},default:function(){return h},frontMatter:function(){return d},metadata:function(){return f},toc:function(){return k}});var r=n(3905),o=Object.defineProperty,a=Object.defineProperties,i=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,p=(e,t,n)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,u=(e,t)=>{for(var n in t||(t={}))c.call(t,n)&&p(e,n,t[n]);if(l)for(var n of l(t))s.call(t,n)&&p(e,n,t[n]);return e};const d={},m="Welcome to Woodpecker",f={unversionedId:"intro",id:"version-0.15/intro",title:"Welcome to Woodpecker",description:"Woodpecker is a simple CI engine with great extensibility. It runs your pipelines inside Docker containers, so if you are already using them in your daily workflow, you'll love Woodpecker for sure.",source:"@site/versioned_docs/version-0.15/10-intro.md",sourceDirName:".",slug:"/intro",permalink:"/docs/intro",draft:!1,editUrl:"https://github.com/woodpecker-ci/woodpecker/edit/master/docs/versioned_docs/version-0.15/10-intro.md",tags:[],version:"0.15",sidebarPosition:10,frontMatter:{},sidebar:"tutorialSidebar",next:{title:"Getting started",permalink:"/docs/usage/intro"}},y={},k=[{value:".woodpecker.yml",id:"woodpeckeryml",level:2},{value:"Build steps are containers",id:"build-steps-are-containers",level:3},{value:"File changes are incremental",id:"file-changes-are-incremental",level:3},{value:"Plugins are straightforward",id:"plugins-are-straightforward",level:2}],g={toc:k};function h(e){var t,o=e,{components:p}=o,d=((e,t)=>{var n={};for(var r in e)c.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&l)for(var r of l(e))t.indexOf(r)<0&&s.call(e,r)&&(n[r]=e[r]);return n})(o,["components"]);return(0,r.kt)("wrapper",(t=u(u({},g),d),a(t,i({components:p,mdxType:"MDXLayout"}))),(0,r.kt)("h1",u({},{id:"welcome-to-woodpecker"}),"Welcome to Woodpecker"),(0,r.kt)("p",null,"Woodpecker is a simple CI engine with great extensibility. It runs your pipelines inside ",(0,r.kt)("a",u({parentName:"p"},{href:"https://www.docker.com/"}),"Docker")," containers, so if you are already using them in your daily workflow, you'll love Woodpecker for sure."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"woodpecker",src:n(5922).Z,width:"1920",height:"1003"})),(0,r.kt)("h2",u({},{id:"woodpeckeryml"}),".woodpecker.yml"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Place your pipeline in a file named ",(0,r.kt)("inlineCode",{parentName:"li"},".woodpecker.yml")," in your repository"),(0,r.kt)("li",{parentName:"ul"},"Pipeline steps can be named as you like"),(0,r.kt)("li",{parentName:"ul"},"Run any command in the commands section")),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-yaml"}),'# .woodpecker.yml\npipeline:\n  build:\n    image: debian\n    commands:\n      - echo "This is the build step"\n  a-test-step:\n    image: debian\n    commands:\n      - echo "Testing.."\n')),(0,r.kt)("h3",u({},{id:"build-steps-are-containers"}),"Build steps are containers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Define any Docker image as context",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"either use your own and install the needed tools in custom Docker images, or"),(0,r.kt)("li",{parentName:"ul"},"search ",(0,r.kt)("a",u({parentName:"li"},{href:"https://hub.docker.com/search?type=image"}),"Docker Hub")," for images that are already tailored for your needs) "))),(0,r.kt)("li",{parentName:"ul"},"List the commands that should be executed in your container, in order to build or test your application")),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-diff"}),"pipeline:\n  build:\n-   image: debian\n+   image: mycompany/image-with-awscli\n    commands:\n      - aws help\n")),(0,r.kt)("h3",u({},{id:"file-changes-are-incremental"}),"File changes are incremental"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Woodpecker clones the source code in the beginning pipeline"),(0,r.kt)("li",{parentName:"ul"},"Changes to files are persisted through steps as the same volume is mounted to all steps")),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-yaml"}),"# .woodpecker.yml\npipeline:\n  build:\n    image: debian\n    commands:\n      - touch myfile\n  a-test-step:\n    image: debian\n    commands:\n      - cat myfile\n")),(0,r.kt)("h2",u({},{id:"plugins-are-straightforward"}),"Plugins are straightforward"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If you copy the same shell script from project to project"),(0,r.kt)("li",{parentName:"ul"},"Pack it into a plugin instead"),(0,r.kt)("li",{parentName:"ul"},"And make the yaml declarative"),(0,r.kt)("li",{parentName:"ul"},"Plugins are Docker images with your script as an entrypoint")),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-Dockerfile"}),'# Dockerfile\nFROM laszlocloud/kubectl\nCOPY deploy /usr/local/deploy\nENTRYPOINT ["/usr/local/deploy"]\n')),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"# deploy\nkubectl apply -f $PLUGIN_TEMPLATE\n")),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-yaml"}),"# .woodpecker.yml\npipeline:\n  deploy-to-k8s:\n    image: laszlocloud/my-k8s-plugin\n    template: config/k8s/service.yml\n")),(0,r.kt)("p",null,"See ",(0,r.kt)("a",u({parentName:"p"},{href:"/docs/usage/plugins/plugins"}),"plugin docs"),"."))}h.isMDXComponent=!0},5922:function(e,t,n){t.Z=n.p+"assets/images/woodpecker-4c7b028122f13b47b001c676fbf6917f.png"}}]);