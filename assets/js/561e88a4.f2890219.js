"use strict";(self.webpackChunkwoodpecker=self.webpackChunkwoodpecker||[]).push([[4634],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=s(t),d=o,E=m["".concat(c,".").concat(d)]||m[d]||p[d]||a;return t?r.createElement(E,i(i({ref:n},u),{},{components:t})):r.createElement(E,i({ref:n},u))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},8214:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return u},default:function(){return m}});var r=t(3117),o=t(102),a=(t(7294),t(3905)),i=["components"],l={},c="Agent configuration",s={unversionedId:"administration/agent-config",id:"administration/agent-config",title:"Agent configuration",description:"Agents are configured by the command line or environement variables. At the minimum you need the following information:",source:"@site/docs/30-administration/11-agent-config.md",sourceDirName:"30-administration",slug:"/administration/agent-config",permalink:"/docs/administration/agent-config",editUrl:"https://github.com/woodpecker-ci/woodpecker/edit/master/docs/docs/30-administration/11-agent-config.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Server configuration",permalink:"/docs/administration/server-config"},next:{title:"Overview",permalink:"/docs/administration/vcs/overview"}},u=[{value:"Processes per agent",id:"processes-per-agent",children:[],level:2},{value:"Filtering agents",id:"filtering-agents",children:[{value:"Filter on Platform",id:"filter-on-platform",children:[],level:3}],level:2},{value:"All agent configuration options",id:"all-agent-configuration-options",children:[],level:2}],p={toc:u};function m(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"agent-configuration"},"Agent configuration"),(0,a.kt)("p",null,"Agents are configured by the command line or environement variables. At the minimum you need the following information:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"# docker-compose.yml\nversion: '3'\n\nservices:\n  woodpecker-agent:\n  [...]\n  environment:\n+   - WOODPECKER_SERVER=localhost:9000\n+   - WOODPECKER_AGENT_SECRET=\"your-shared-secret-goes-here\"\n\n")),(0,a.kt)("p",null,"The following are automatically set and can be overridden:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"WOODPECKER_HOSTNAME if not set, becomes the OS' hostname"),(0,a.kt)("li",{parentName:"ul"},"WOODPECKER_PLATFORM if not set, is the architecture eg: ",(0,a.kt)("inlineCode",{parentName:"li"},"linux/amd64")),(0,a.kt)("li",{parentName:"ul"},"WOODPECKER_MAX_PROCS if not set, defaults to 1")),(0,a.kt)("h2",{id:"processes-per-agent"},"Processes per agent"),(0,a.kt)("p",null,"By default the maximum processes that are run per agent is 1. If required you can add ",(0,a.kt)("inlineCode",{parentName:"p"},"WOODPECKER_MAX_PROCS")," to increase your parellel processing on a per-agent basis."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"# docker-compose.yml\nversion: '3'\n\nservices:\n  woodpecker-agent:\n  [...]\n  environment:\n    - WOODPECKER_SERVER=localhost:9000\n    - WOODPECKER_AGENT_SECRET=\"your-shared-secret-goes-here\"\n+    - WOODPECKER_MAX_PROCS=4\n")),(0,a.kt)("h2",{id:"filtering-agents"},"Filtering agents"),(0,a.kt)("p",null,"When building your pipelines as long as you have set the platform or filter, builds can be made to only run code on certain agents. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"- WOODPECKER_HOSTNAME=mycompany-ci-01.example.com\n- WOODPECKER_PLATFORM=linux/amd64\n- WOODPECKER_FILTER=\n")),(0,a.kt)("h3",{id:"filter-on-platform"},"Filter on Platform"),(0,a.kt)("p",null,"Only want certain pipelines or steps to run on certain platforms? Such as arm vs amd64? "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-diff"},"# docker-compose.yml\nversion: '3'\n\nservices:\n  woodpecker-agent:\n  [...]\n  environment:\n    - WOODPECKER_SERVER=localhost:9000\n    - WOODPECKER_AGENT_SECRET=\"\"\n+   - WOODPECKER_PLATFORM=linux/arm64\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"# .woodpecker.yml\npipeline:\n  build:\n   image: golang\n   commands:\n     - go build\n     - go test\n  when:\n    platform: linux/amd64\n\n\n  testing:\n   image: golang\n   commands:\n     - go build\n     - go test\n  when:\n    platform: linux/arm*\n\n\n")),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"/docs/usage/pipeline-syntax#step-when---conditional-execution"},"Conditionals Pipeline")," syntax for more"),(0,a.kt)("h2",{id:"all-agent-configuration-options"},"All agent configuration options"),(0,a.kt)("p",null,"Here is the full list of configuration options and their default variables. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'    - WOODPECKER_SERVER=localhost:9000\n    - WOODPECKER_AGENT_SECRET=""\n    - WOODPECKER_USERNAME=x-oauth-basic\n    - WOODPECKER_LOG_LEVEL=""\n    - WOODPECKER_DEBUG_PRETTY=""\n    - WOODPECKER_DEBUG_NOCOLOR=true\n    - WOODPECKER_HOSTNAME=""\n    - WOODPECKER_PLATFORM="linux/amd64"\n    - WOODPECKER_FILTER=""\n    - WOODPECKER_MAX_PROCS=1\n    - WOODPECKER_HEALTHCHECK=true\n    - WOODPECKER_KEEPALIVE_TIME=10\n    - WOODPECKER_KEEPALIVE_TIMEOUT=time.Second * 20\n    - WOODPECKER_GRPC_SECURE=""\n    - WOODPECKER_GRPC_VERIFY=true\n')))}m.isMDXComponent=!0}}]);