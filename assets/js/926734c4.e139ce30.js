"use strict";(self.webpackChunkwoodpecker=self.webpackChunkwoodpecker||[]).push([[9084],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=r.createContext({}),k=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},u=function(e){var t=k(e.components);return r.createElement(s.Provider,{value:t},e.children)},i={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),g=k(n),m=l,d=g["".concat(s,".").concat(m)]||g[m]||i[m]||a;return n?r.createElement(d,p(p({ref:t},u),{},{components:n})):r.createElement(d,p({ref:t},u))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,p=new Array(a);p[0]=g;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,p[1]=o;for(var k=2;k<a;k++)p[k]=n[k];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},7796:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return o},metadata:function(){return k},toc:function(){return i}});var r=n(3117),l=n(102),a=(n(7294),n(3905)),p=["components"],o={},s="CLI",k={unversionedId:"cli",id:"cli",title:"CLI",description:"woodpecker-cli - command line utility",source:"@site/docs/40-cli.md",sourceDirName:".",slug:"/cli",permalink:"/docs/next/cli",draft:!1,editUrl:"https://github.com/woodpecker-ci/woodpecker/edit/master/docs/docs/40-cli.md",tags:[],version:"current",sidebarPosition:40,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"External Configuration API",permalink:"/docs/next/administration/external-configuration-api"},next:{title:"Downloads",permalink:"/docs/next/downloads"}},u={},i=[{value:"build",id:"build",level:2},{value:"ls",id:"ls",level:3},{value:"last",id:"last",level:3},{value:"logs",id:"logs",level:3},{value:"info",id:"info",level:3},{value:"stop",id:"stop",level:3},{value:"start",id:"start",level:3},{value:"approve",id:"approve",level:3},{value:"decline",id:"decline",level:3},{value:"queue",id:"queue",level:3},{value:"ps",id:"ps",level:3},{value:"log",id:"log",level:2},{value:"purge",id:"purge",level:3},{value:"deploy",id:"deploy",level:2},{value:"exec",id:"exec",level:2},{value:"info",id:"info-1",level:2},{value:"registry",id:"registry",level:2},{value:"add",id:"add",level:3},{value:"rm",id:"rm",level:3},{value:"update",id:"update",level:3},{value:"info",id:"info-2",level:3},{value:"ls",id:"ls-1",level:3},{value:"secret",id:"secret",level:2},{value:"add",id:"add-1",level:3},{value:"rm",id:"rm-1",level:3},{value:"update",id:"update-1",level:3},{value:"info",id:"info-3",level:3},{value:"ls",id:"ls-2",level:3},{value:"repo",id:"repo",level:2},{value:"ls",id:"ls-3",level:3},{value:"info",id:"info-4",level:3},{value:"add",id:"add-2",level:3},{value:"update",id:"update-2",level:3},{value:"rm",id:"rm-2",level:3},{value:"repair",id:"repair",level:3},{value:"chown",id:"chown",level:3},{value:"sync",id:"sync",level:3},{value:"user",id:"user",level:2},{value:"ls",id:"ls-4",level:3},{value:"info",id:"info-5",level:3},{value:"add",id:"add-3",level:3},{value:"rm",id:"rm-3",level:3},{value:"lint",id:"lint",level:2},{value:"log-level",id:"log-level",level:2},{value:"cron",id:"cron",level:2},{value:"add",id:"add-4",level:3},{value:"rm",id:"rm-4",level:3},{value:"update",id:"update-3",level:3},{value:"info",id:"info-6",level:3},{value:"ls",id:"ls-5",level:3}],g={toc:i};function m(e){var t=e.components,n=(0,l.Z)(e,p);return(0,a.kt)("wrapper",(0,r.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"cli"},"CLI"),(0,a.kt)("h1",{id:"name"},"NAME"),(0,a.kt)("p",null,"woodpecker-cli - command line utility"),(0,a.kt)("h1",{id:"synopsis"},"SYNOPSIS"),(0,a.kt)("p",null,"woodpecker-cli"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"[--log-level]=[value]\n[--server|-s]=[value]\n[--token|-t]=[value]\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Usage"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"woodpecker-cli [GLOBAL OPTIONS] command [COMMAND OPTIONS] [ARGUMENTS...]\n")),(0,a.kt)("h1",{id:"global-options"},"GLOBAL OPTIONS"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h1",{id:"commands"},"COMMANDS"),(0,a.kt)("h2",{id:"build"},"build"),(0,a.kt)("p",null,"manage builds"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h3",{id:"ls"},"ls"),(0,a.kt)("p",null,"show build history"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--branch"),'="": branch filter'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--event"),'="": event filter'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--format"),'="": format output (default: \x1b[33mBuild #{{ .Number }} \x1b[0m\nStatus: {{ .Status }}\nEvent: {{ .Event }}\nCommit: {{ .Commit }}\nBranch: {{ .Branch }}\nRef: {{ .Ref }}\nAuthor: {{ .Author }} {{ if .Email }}<{{.Email}}>{{ end }}\nMessage: {{ .Message }}\n)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--limit"),'="": limit the list size (default: 25)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--status"),'="": status filter'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h3",{id:"last"},"last"),(0,a.kt)("p",null,"show latest build details"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--branch"),'="": branch name (default: master)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--format"),'="": format output (default: Number: {{ .Number }}\nStatus: {{ .Status }}\nEvent: {{ .Event }}\nCommit: {{ .Commit }}\nBranch: {{ .Branch }}\nRef: {{ .Ref }}\nMessage: {{ .Message }}\nAuthor: {{ .Author }}\n)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h3",{id:"logs"},"logs"),(0,a.kt)("p",null,"show build logs"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h3",{id:"info"},"info"),(0,a.kt)("p",null,"show build details"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--format"),'="": format output (default: Number: {{ .Number }}\nStatus: {{ .Status }}\nEvent: {{ .Event }}\nCommit: {{ .Commit }}\nBranch: {{ .Branch }}\nRef: {{ .Ref }}\nMessage: {{ .Message }}\nAuthor: {{ .Author }}\n)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h3",{id:"stop"},"stop"),(0,a.kt)("p",null,"stop a build"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h3",{id:"start"},"start"),(0,a.kt)("p",null,"start a build"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--param, -p"),'="": custom parameters to be injected into the job environment. Format: KEY=value'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h3",{id:"approve"},"approve"),(0,a.kt)("p",null,"approve a build"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h3",{id:"decline"},"decline"),(0,a.kt)("p",null,"decline a build"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h3",{id:"queue"},"queue"),(0,a.kt)("p",null,"show build queue"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--format"),'="": format output (default: \x1b[33m{{ .FullName }} #{{ .Number }} \x1b[0m\nStatus: {{ .Status }}\nEvent: {{ .Event }}\nCommit: {{ .Commit }}\nBranch: {{ .Branch }}\nRef: {{ .Ref }}\nAuthor: {{ .Author }} {{ if .Email }}<{{.Email}}>{{ end }}\nMessage: {{ .Message }}\n)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h3",{id:"ps"},"ps"),(0,a.kt)("p",null,"show build steps"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--format"),'="": format output (default: \x1b[33mProc #{{ .PID }} \x1b[0m\nStep: {{ .Name }}\nState: {{ .State }}\n)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h2",{id:"log"},"log"),(0,a.kt)("p",null,"manage logs"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h3",{id:"purge"},"purge"),(0,a.kt)("p",null,"purge a log"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h2",{id:"deploy"},"deploy"),(0,a.kt)("p",null,"deploy code"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--branch"),'="": branch filter (default: master)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--event"),'="": event filter (default: push)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--format"),'="": format output (default: Number: {{ .Number }}\nStatus: {{ .Status }}\nCommit: {{ .Commit }}\nBranch: {{ .Branch }}\nRef: {{ .Ref }}\nMessage: {{ .Message }}\nAuthor: {{ .Author }}\nTarget: {{ .Deploy }}\n)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--param, -p"),'="": custom parameters to be injected into the job environment. Format: KEY=value'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--status"),'="": status filter (default: success)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h2",{id:"exec"},"exec"),(0,a.kt)("p",null,"execute a local build"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--backend-engine"),'="": backend engine to run pipelines on (default: auto-detect)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--backend-k8s-namespace"),'="": backend k8s namespace (default: woodpecker)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--backend-k8s-storage-class"),'="": backend k8s storage class'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--backend-k8s-storage-rwx"),": backend k8s storage access mode, should ReadWriteMany (RWX) instead of ReadWriteOnce (RWO) be used? (default: true)"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--backend-k8s-volume-size"),'="": backend k8s volume size (default 10G) (default: 10G)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--build-created"),'="":  (default: 0)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--build-event"),'="": '),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--build-finished"),'="":  (default: 0)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--build-link"),'="": '),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--build-number"),'="":  (default: 0)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--build-started"),'="":  (default: 0)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--build-status"),'="": '),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--build-target"),'="": '),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--commit-author-avatar"),'="": '),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--commit-author-email"),'="": '),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--commit-author-name"),'="": '),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--commit-branch"),'="": '),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--commit-message"),'="": '),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--commit-ref"),'="": '),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--commit-refspec"),'="": '),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--commit-sha"),'="": '),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--env"),'="": '),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--job-number"),'="":  (default: 0)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--local"),": build from local directory"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--netrc-machine"),'="": '),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--netrc-password"),'="": '),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--netrc-username"),'="": '),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--network"),'="": external networks'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--parent-build-number"),'="":  (default: 0)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--prev-build-created"),'="":  (default: 0)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--prev-build-event"),'="": '),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--prev-build-finished"),'="":  (default: 0)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--prev-build-link"),'="": '),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--prev-build-number"),'="":  (default: 0)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--prev-build-started"),'="":  (default: 0)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--prev-build-status"),'="": '),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--prev-commit-author-avatar"),'="": '),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--prev-commit-author-email"),'="": '),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--prev-commit-author-name"),'="": '),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--prev-commit-branch"),'="": '),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--prev-commit-message"),'="": '),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--prev-commit-ref"),'="": '),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--prev-commit-refspec"),'="": '),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--prev-commit-sha"),'="": '),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--privileged"),'="": privileged plugins (default: ',"[plugins/docker plugins/gcr plugins/ecr woodpeckerci/plugin-docker woodpeckerci/plugin-docker-buildx]",")"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--repo-link"),'="": '),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--repo-name"),'="": '),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--repo-private"),'="": '),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--repo-remote-url"),'="": '),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--system-link"),'="":  (default: ',(0,a.kt)("a",{parentName:"p",href:"https://github.com/cncd/pipec"},"https://github.com/cncd/pipec"),")"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--system-name"),'="":  (default: pipec)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--system-platform"),'="": '),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--timeout"),'="": build timeout (default: 1h0m0s)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--volumes"),'="": build volumes'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--workspace-base"),'="":  (default: /woodpecker)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--workspace-path"),'="":  (default: src)'),(0,a.kt)("h2",{id:"info-1"},"info"),(0,a.kt)("p",null,"show information about the current user"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h2",{id:"registry"},"registry"),(0,a.kt)("p",null,"manage registries"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h3",{id:"add"},"add"),(0,a.kt)("p",null,"adds a registry"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--hostname"),'="": registry hostname (default: docker.io)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--password"),'="": registry password'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--repository, --repo"),'="": repository name (e.g. octocat/hello-world)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--username"),'="": registry username'),(0,a.kt)("h3",{id:"rm"},"rm"),(0,a.kt)("p",null,"remove a registry"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--hostname"),'="": registry hostname (default: docker.io)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--repository, --repo"),'="": repository name (e.g. octocat/hello-world)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h3",{id:"update"},"update"),(0,a.kt)("p",null,"update a registry"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--hostname"),'="": registry hostname (default: docker.io)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--password"),'="": registry password'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--repository, --repo"),'="": repository name (e.g. octocat/hello-world)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--username"),'="": registry username'),(0,a.kt)("h3",{id:"info-2"},"info"),(0,a.kt)("p",null,"display registry info"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--hostname"),'="": registry hostname (default: docker.io)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--repository, --repo"),'="": repository name (e.g. octocat/hello-world)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h3",{id:"ls-1"},"ls"),(0,a.kt)("p",null,"list registries"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--repository, --repo"),'="": repository name (e.g. octocat/hello-world)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h2",{id:"secret"},"secret"),(0,a.kt)("p",null,"manage secrets"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h3",{id:"add-1"},"add"),(0,a.kt)("p",null,"adds a secret"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--event"),'="": secret limited to these events'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--global"),": global secret"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--image"),'="": secret limited to these images'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--name"),'="": secret name'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--organization"),'="": organization name (e.g. octocat)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--repository, --repo"),'="": repository name (e.g. octocat/hello-world)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--value"),'="": secret value'),(0,a.kt)("h3",{id:"rm-1"},"rm"),(0,a.kt)("p",null,"remove a secret"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--global"),": global secret"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--name"),'="": secret name'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--organization"),'="": organization name (e.g. octocat)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--repository, --repo"),'="": repository name (e.g. octocat/hello-world)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h3",{id:"update-1"},"update"),(0,a.kt)("p",null,"update a secret"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--event"),'="": secret limited to these events'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--global"),": global secret"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--image"),'="": secret limited to these images'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--name"),'="": secret name'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--organization"),'="": organization name (e.g. octocat)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--repository, --repo"),'="": repository name (e.g. octocat/hello-world)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--value"),'="": secret value'),(0,a.kt)("h3",{id:"info-3"},"info"),(0,a.kt)("p",null,"display secret info"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--global"),": global secret"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--name"),'="": secret name'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--organization"),'="": organization name (e.g. octocat)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--repository, --repo"),'="": repository name (e.g. octocat/hello-world)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h3",{id:"ls-2"},"ls"),(0,a.kt)("p",null,"list secrets"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--global"),": global secret"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--organization"),'="": organization name (e.g. octocat)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--repository, --repo"),'="": repository name (e.g. octocat/hello-world)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h2",{id:"repo"},"repo"),(0,a.kt)("p",null,"manage repositories"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h3",{id:"ls-3"},"ls"),(0,a.kt)("p",null,"list all repos"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--format"),'="": format output (default: {{ .FullName }})'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--org"),'="": filter by organization'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h3",{id:"info-4"},"info"),(0,a.kt)("p",null,"show repository details"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--format"),'="": format output (default: Owner: {{ .Owner }}\nRepo: {{ .Name }}\nType: {{ .SCMKind }}\nConfig: {{ .Config }}\nVisibility: {{ .Visibility }}\nPrivate: {{ .IsSCMPrivate }}\nTrusted: {{ .IsTrusted }}\nGated: {{ .IsGated }}\nRemote: {{ .Clone }}\n)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h3",{id:"add-2"},"add"),(0,a.kt)("p",null,"add a repository"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h3",{id:"update-2"},"update"),(0,a.kt)("p",null,"update a repository"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--build-counter"),'="": repository starting build number (default: 0)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--config"),'="": repository configuration path (e.g. .woodpecker.yml)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--gated"),": repository is gated"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--timeout"),'="": repository timeout (default: 0s)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--trusted"),": repository is trusted"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--unsafe"),": validate updating the build-counter is unsafe"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--visibility"),'="": repository visibility'),(0,a.kt)("h3",{id:"rm-2"},"rm"),(0,a.kt)("p",null,"remove a repository"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h3",{id:"repair"},"repair"),(0,a.kt)("p",null,"repair repository webhooks"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h3",{id:"chown"},"chown"),(0,a.kt)("p",null,"assume ownership of a repository"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h3",{id:"sync"},"sync"),(0,a.kt)("p",null,"synchronize the repository list"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--format"),'="": format output (default: {{ .FullName }})'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h2",{id:"user"},"user"),(0,a.kt)("p",null,"manage users"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h3",{id:"ls-4"},"ls"),(0,a.kt)("p",null,"list all users"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--format"),'="": format output (default: {{ .Login }})'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h3",{id:"info-5"},"info"),(0,a.kt)("p",null,"show user details"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--format"),'="": format output (default: User: {{ .Login }}\nEmail: {{ .Email }})'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h3",{id:"add-3"},"add"),(0,a.kt)("p",null,"adds a user"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h3",{id:"rm-3"},"rm"),(0,a.kt)("p",null,"remove a user"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h2",{id:"lint"},"lint"),(0,a.kt)("p",null,"lint a pipeline configuration file"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h2",{id:"log-level"},"log-level"),(0,a.kt)("p",null,"get the logging level of the server, or set it with ","[level]"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h2",{id:"cron"},"cron"),(0,a.kt)("p",null,"manage cron jobs"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h3",{id:"add-4"},"add"),(0,a.kt)("p",null,"adds a cron"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--branch"),'="": cron branch'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--name"),'="": cron name'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--repository, --repo"),'="": repository name (e.g. octocat/hello-world)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--schedule"),'="": cron schedule'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h3",{id:"rm-4"},"rm"),(0,a.kt)("p",null,"remove a cron"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--id"),'="": cron id'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--repository, --repo"),'="": repository name (e.g. octocat/hello-world)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h3",{id:"update-3"},"update"),(0,a.kt)("p",null,"update a cron"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--branch"),'="": cron branch'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--id"),'="": cron id'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--name"),'="": cron name'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--repository, --repo"),'="": repository name (e.g. octocat/hello-world)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--schedule"),'="": cron schedule'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h3",{id:"info-6"},"info"),(0,a.kt)("p",null,"display cron info"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--id"),'="": cron id'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--repository, --repo"),'="": repository name (e.g. octocat/hello-world)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,a.kt)("h3",{id:"ls-5"},"ls"),(0,a.kt)("p",null,"list registries"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--repository, --repo"),'="": repository name (e.g. octocat/hello-world)'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'))}m.isMDXComponent=!0}}]);